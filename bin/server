#!/usr/bin/env node
'use strict';

const cluster = require('cluster');
const winston = require('winston');
const amqp = require('amqp');
const config = require('../config').get('/logging');

winston.level = config.debug ? 'debug' : 'info';

const tasks = [
    'queue-processor',
    'www'
];

if(cluster.isMaster) {
    let childTasks = {};

    winston.info('Starting cluster coordinator (' + (process.env.NODE_ENV || 'dev') + ')');
    for(let task of tasks) {
        let worker = cluster.fork({
           task: task
        });

        worker.on('message', msg => {
            winston.debug('Worker %s registered for %s', msg.id, msg.task);
            childTasks[msg.id] = msg.task;
        });
    }

    cluster.on('exit', (worker, code, signal) => {
        if(!worker.suicide) {
            let task = childTasks[worker.id] || 'www';
            winston.warn('worker (%s) died (reason: %s), , restarting...', task, signal || code);
            cluster.fork({
                task: task || 'www'
            });
        }
    });
}
else {
    let task = process.env.task || 'www';
    try {
        cluster.worker.send({ id: cluster.worker.id, task: task }, () => {
            require('../server/' + task)();
        });
    }
    catch(err) {
        winston.error('Uncaught exception (task: %s): %s', task, err);
        throw err;
    }
}
